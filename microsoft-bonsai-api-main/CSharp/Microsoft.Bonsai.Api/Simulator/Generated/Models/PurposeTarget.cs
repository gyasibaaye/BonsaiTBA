// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bonsai.SimulatorApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// This structure describes the "target" of the simulator;
    /// i.e., what trainable construct(s) it exists to service.
    /// </summary>
    public partial class PurposeTarget
    {
        /// <summary>
        /// Initializes a new instance of the PurposeTarget class.
        /// </summary>
        public PurposeTarget()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PurposeTarget class.
        /// </summary>
        /// <param name="brainName">This is the brain _short_ name!</param>
        public PurposeTarget(string workspaceName = default(string), string brainName = default(string), int? brainVersion = default(int?), string conceptName = default(string))
        {
            WorkspaceName = workspaceName;
            BrainName = brainName;
            BrainVersion = brainVersion;
            ConceptName = conceptName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "workspaceName")]
        public string WorkspaceName { get; set; }

        /// <summary>
        /// Gets or sets this is the brain _short_ name!
        /// </summary>
        [JsonProperty(PropertyName = "brainName")]
        public string BrainName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "brainVersion")]
        public int? BrainVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "conceptName")]
        public string ConceptName { get; set; }

    }
}
